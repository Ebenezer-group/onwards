#pragma once
// Code generated by the C++ Middleware Writer version 1.14.
#include<SendBuffer.hh>
#include"message_id_types.hh"
#include"account_info.hh"
#include<marshalling_integer.hh>
#include<vector>

namespace middle_back{
void Marshal (::cmw::SendBuffer& buf
         ,message_id_8 const& a
         ,::std::vector<cmw_account> const& b){
  try{
    buf.ReserveBytes(4);
    buf.Receive(a);
    buf.ReceiveGroup(b);
    buf.FillInSize(10000);
  }catch(...){buf.Rollback();throw;}
}

inline void Marshal (::cmw::SendBuffer& buf
         ,message_id_8 const& a
         ,::cmw::marshalling_integer const& b
         ,request_generator const& c){
  try{
    buf.ReserveBytes(4);
    buf.Receive(a);
    b.Marshal(buf);
    c.Marshal(buf);
    buf.FillInSize(700000);
  }catch(...){buf.Rollback();throw;}
}

inline void Marshal (::cmw::SendBuffer& buf
         ,message_id_8 const& a){
  try{
    buf.ReserveBytes(4);
    buf.Receive(a);
    buf.FillInSize(10000);
  }catch(...){buf.Rollback();throw;}
}
}

inline void
cmw_account::MarshalMemberData (::cmw::SendBuffer& buf)const{
  number.Marshal(buf);
  password.Marshal(buf);
}
