#pragma once
//Code generated by the C++ Middleware Writer version 1.14.
inline void
cmwAccount::MarshalMembers (::cmw::SendBuffer& buf)const{
  number.Marshal(buf);
  password.Marshal(buf);
}

namespace middleBack{
template<messageID id>
void Marshal (::cmw::SendBuffer& buf
         ,::std::vector<cmwAccount> const& a
         ,::int32_t b)try{
  buf.ReserveBytes(4);
  buf.Receive(static_cast<uint8_t>(id));
  ReceiveGroup(buf,a);
  buf.Receive(b);
  buf.FillInSize(10000);
}catch(...){buf.Rollback();throw;}

template<messageID id>
void Marshal (::cmw::SendBuffer& buf
         ,cmwRequest const& a)try{
  buf.ReserveBytes(4);
  buf.Receive(static_cast<uint8_t>(id));
  a.Marshal(buf);
  buf.FillInSize(700000);
}catch(...){buf.Rollback();throw;}

template<messageID id>
void Marshal (::cmw::SendBuffer& buf)try{
  buf.ReserveBytes(4);
  buf.Receive(static_cast<uint8_t>(id));
  buf.FillInSize(10000);
}catch(...){buf.Rollback();throw;}
}

namespace middleFront{
template<bool res>
void Marshal (::cmw::SendBuffer& buf
         ,stringPlus const& a={})try{
  buf.ReserveBytes(4);
  Receive(buf,res);
  if(!res){
    Receive(buf,a);
  }
  buf.FillInSize(udp_packet_max);
}catch(...){buf.Rollback();throw;}
}
