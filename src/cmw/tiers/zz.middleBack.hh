#pragma once
//Code generated by the C++ Middleware Writer version 1.14.
inline void
cmwAccount::MarshalMemberData (::cmw::SendBuffer& buf)const{
  number.Marshal(buf);
  password.Marshal(buf);
}

namespace middleBack{
void Marshal (::cmw::SendBuffer& buf
         ,messageID a
         ,::std::vector<cmwAccount> const& b
         ,::int32_t c)try{
  buf.ReserveBytes(4);
  buf.Receive(static_cast<uint8_t>(a));
  ReceiveGroup(buf,b);
  buf.Receive(c);
  buf.FillInSize(10000);
}catch(...){buf.Rollback();throw;}

inline void Marshal (::cmw::SendBuffer& buf
         ,messageID a
         ,cmwRequest const& b)try{
  buf.ReserveBytes(4);
  buf.Receive(static_cast<uint8_t>(a));
  b.Marshal(buf);
  buf.FillInSize(700000);
}catch(...){buf.Rollback();throw;}

inline void Marshal (::cmw::SendBuffer& buf
         ,messageID a)try{
  buf.ReserveBytes(4);
  buf.Receive(static_cast<uint8_t>(a));
  buf.FillInSize(10000);
}catch(...){buf.Rollback();throw;}
}

namespace middleFront{
void Marshal (::cmw::SendBuffer& buf
         ,bool a
         ,stringPlus const& b={})try{
  buf.ReserveBytes(4);
  Receive(buf,a);
  if(!a){
    Receive(buf,b);
  }
  buf.FillInSize(udp_packet_max);
}catch(...){buf.Rollback();throw;}
}
