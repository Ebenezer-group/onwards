#pragma once
//Code generated by the C++ Middleware Writer version 1.14.
#include<cmw/Buffer.hh>
#include"account.hh"
#include<vector>

namespace middleBack{
void Marshal (::cmw::SendBuffer& buf
         ,messageID_8 a
         ,::std::vector<cmwAccount> const& b
	 ,::int32_t c){
  try{
    buf.ReserveBytes(4);
    buf.Receive(a);
    ReceiveGroup(buf,b);
    buf.Receive(c);
    buf.FillInSize(10000);
  }catch(...){buf.Rollback();throw;}
}

inline void Marshal (::cmw::SendBuffer& buf
         ,messageID_8 a
         ,cmwRequest const& b){
  try{
    buf.ReserveBytes(4);
    buf.Receive(a);
    b.Marshal(buf);
    buf.FillInSize(700000);
  }catch(...){buf.Rollback();throw;}
}

inline void Marshal (::cmw::SendBuffer& buf
         ,messageID_8 a){
  try{
    buf.ReserveBytes(4);
    buf.Receive(a);
    buf.FillInSize(10000);
  }catch(...){buf.Rollback();throw;}
}
}

inline void
cmwAccount::MarshalMemberData (::cmw::SendBuffer& buf)const{
  number.Marshal(buf);
  password.Marshal(buf);
}

namespace middleFront{
void Marshal (::cmw::SendBuffer& buf
         ,bool a
         ,cmw::stringPlus const& b={}){
  try{
    buf.ReserveBytes(4);
    Receive(buf,a);
    if(!a){
      Receive(buf,b);
    }
    buf.FillInSize(cmw::udp_packet_max);
  }catch(...){buf.Rollback();throw;}
}
}
